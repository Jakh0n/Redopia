{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jakhon/Desktop/eCommerce/client/app/%28root%29/product/%5Bproductid%5D/page.tsx"],"sourcesContent":["import { Badge } from '@/components/ui/badge'\nimport { products } from '@/constants'\nimport { formatPrice } from '@/lib/utils'\nimport Image from 'next/image'\nimport CreateOrderButton from '../_components/crete-order.btn'\nimport { Params } from '@/types'\nimport { FC } from 'react'\n\ninterface Props {\n\tparams: Params\n}\n\nconst Page: FC<Params> () => {\n\treturn (\n\t\t<div className='grid grid-cols-1 md:grid-cols-3 gap-4'>\n\t\t\t<div className='bg-secondary relative w-full h-[70vh] col-span-2'>\n\t\t\t\t<Image\n\t\t\t\t\tsrc={products[0].image}\n\t\t\t\t\tfill\n\t\t\t\t\tclassName='mx-auto'\n\t\t\t\t\talt={products[0].title}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='flex flex-col space-y-1 self-center'>\n\t\t\t\t<h1 className='font-bold text-4xl'>{products[0].title}</h1>\n\t\t\t\t<Badge className='w-fit' variant={'secondary'}>\n\t\t\t\t\t# {products[0].category}\n\t\t\t\t</Badge>\n\t\t\t\t<p className='text-xs text-muted-foreground'>\n\t\t\t\t\t{products[0].description}\n\t\t\t\t</p>\n\t\t\t\t<p className='font-bold'>{formatPrice(+products[0].price)}</p>\n\t\t\t\t<CreateOrderButton />\n\t\t\t\t<div className='text-xs'>\n\t\t\t\t\tYour purchase is secure with us. We do not store any credit card\n\t\t\t\t\tinformation. We use Payme for payment processing.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Page\n"],"names":[],"mappings":";;;AAYA,MAAM;uCA8BS"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/jakhon/Desktop/eCommerce/client/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAkCA,cAAc,qCAAoC;AAhBlD,SAASE,IAAI,EAAEC,KAAK,GAAE;AAQtB,8BAA8B;AAG9B,OAAO,MAAMG,eAAe;IAE1BG,WAAWC;AA9Bb,SAASV,kBAAkB,QAAQ,2DAA2D;AAoC9F,OAAO,MAAMW,cAAc,IAAIX,mBAAmB;QAG9Ce,MAAM;;;;;;;;;;;;QACNC,UAAU,uDAAA;QACV,EAAA,yCAA2C;QAC3CC,KAAAA;IAAAA;IAAAA,EAAY;gBACZC,IAAAA;YAAAA,KAAU;YAAA;wBACVC,IAAAA;oBAAAA,KAAU,EAAE;oBAAA;4BACd,QAAA;4BAAA;4BAAA;oCACAC,QAAAA;oCAAAA,CAAU;oCAAA;yCACRC,YAAYnB;0CACd,QAAA,CAAA;wCAAA,QAAA;4CAAA,IAAA;4CAAA;yCAAA;oCACF;iCAAA,CAAE","ignoreList":[0]}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}